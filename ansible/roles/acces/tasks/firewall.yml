---
- name: Install iptables-persistent if not present (Debian/Ubuntu)
  apt:
    name: iptables-persistent
    state: present
    update_cache: yes
  when: ansible_facts['os_family'] == 'Debian' and enable_whitelist

- name: Install iptables-services if not present (RedHat/CentOS)
  yum:
    name: iptables-services
    state: present
  when: ansible_facts['os_family'] == 'RedHat'

- name: Create ipset whitelist
  file:
    path: /etc/ipset.d/whitelist
    state: touch

- name: Add IP addresses to ipset whitelist
  ansible.posix.ipset:
    name: whitelist
    entry: "{{ item }}"
    state: present
  loop: "{{ whitelist_ips }}"
  notify: Save ipset list to file

- name: Create systemd service for loading ipset on startup
  copy:
    dest: /etc/systemd/system/ipset-whitelist.service
    content: |
      [Unit]
      Description=Load ipset whitelist
      After=network.target

      [Service]
      Type=oneshot
      ExecStart=/sbin/ipset restore < /etc/ipset.d/whitelist
      RemainAfterExit=true

      [Install]
      WantedBy=multi-user.target
  notify: Reload systemd daemon

- name: Allow traffic from whitelist IPs
  iptables:
    chain: INPUT
    source: 'ipset:whitelist'
    jump: ACCEPT
  notify: Save iptables rules

- name: Allow HTTP traffic
  iptables:
    chain: INPUT
    protocol: tcp
    dport: 80
    jump: ACCEPT
  notify: Save iptables rules

- name: Allow HTTPS traffic
  iptables:
    chain: INPUT
    protocol: tcp
    dport: 443
    jump: ACCEPT
  notify: Save iptables rules

- name: Allow established and related connections
  iptables:
    chain: INPUT
    match: state
    state: RELATED,ESTABLISHED
    jump: ACCEPT
  notify: Save iptables rules
